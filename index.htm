<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Word of the Day</title>
  <!-- Google Fonts for modern typography -->
  <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;700&display=swap" rel="stylesheet">
  <style>
    /* General styles */
    body {
      font-family: 'Poppins', sans-serif;
      background: linear-gradient(135deg, #e0eafc 0%, #cfdef3 100%);
      margin: 0;
      display: flex;
      justify-content: center;
      align-items: center;
      min-height: 100vh;
      padding: 20px;
    }

    /* Card container */
    .card {
      background-color: #ffffff;
      border: 1px solid #e2e8f0;
      border-radius: 12px;
      padding: 30px;
      max-width: 450px;
      width: 100%;
      text-align: center;
      box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);
      transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

    .card:hover {
      transform: translateY(-5px);
      box-shadow: 0 12px 30px rgba(0, 0, 0, 0.15);
    }

    /* Header */
    h1 {
      font-size: 32px;
      font-weight: 700;
      color: #2d3748;
      margin-bottom: 20px;
      letter-spacing: 0.5px;
    }

    /* Word of the Day content */
    #word-content {
      opacity: 0;
      animation: fadeIn 0.5s ease forwards;
    }

    #date {
      color: #718096;
      margin-bottom: 12px;
      font-size: 16px;
      font-weight: 400;
    }

    #word {
      font-size: 28px;
      font-weight: 600;
      color: #6b46c1;
      margin-bottom: 10px;
      text-transform: capitalize;
    }

    #meaning {
      color: #4a5568;
      font-size: 16px;
      line-height: 1.6;
      background-color: #f7fafc;
      padding: 10px;
      border-radius: 8px;
    }

    /* Loading spinner */
    #loading {
      display: flex;
      justify-content: center;
      align-items: center;
      flex-direction: column;
      color: #718096;
      font-size: 16px;
    }

    .spinner {
      width: 30px;
      height: 30px;
      border: 4px solid #e2e8f0;
      border-top: 4px solid #6b46c1;
      border-radius: 50%;
      animation: spin 1s linear infinite;
      margin-bottom: 10px;
    }

    /* Error state */
    #error {
      color: #e53e3e;
      font-size: 16px;
      font-weight: 500;
    }

    /* Hidden class */
    .hidden {
      display: none;
    }

    /* Animations */
    @keyframes fadeIn {
      from {
        opacity: 0;
        transform: translateY(10px);
      }
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }

    @keyframes spin {
      0% { transform: rotate(0deg); }
      100% { transform: rotate(360deg); }
    }

    /* Responsive design */
    @media (max-width: 480px) {
      .card {
        padding: 20px;
      }

      h1 {
        font-size: 26px;
      }

      #word {
        font-size: 22px;
      }

      #date, #meaning {
        font-size: 14px;
      }
    }
  </style>
</head>
<body>
  <!-- Main container -->
  <div class="card">
    <!-- Header -->
    <h1>Word of the Day</h1>

    <!-- Loading state -->
    <div id="loading">
      <div class="spinner"></div>
      Loading...
    </div>

    <!-- Word of the Day content -->
    <div id="word-content" class="hidden">
      <p id="date"></p>
      <h2 id="word"></h2>
      <p id="meaning"></p>
    </div>

    <!-- Error state -->
    <div id="error" class="hidden">
      Failed to load the Word of the Day: <span id="error-details"></span>
    </div>
  </div>

  <script>
    // Function to fetch and display the Word of the Day
    async function fetchWordOfTheDay() {
      const loading = document.getElementById('loading');
      const wordContent = document.getElementById('word-content');
      const error = document.getElementById('error');
      const errorDetails = document.getElementById('error-details');
      const dateElement = document.getElementById('date');
      const wordElement = document.getElementById('word');
      const meaningElement = document.getElementById('meaning');

      try {
        // Fetch README.md from GitHub repository using the correct API endpoint
        const repoUrl = 'https://api.github.com/repos/manas-08/word_of_the_day/readme';
        const response = await fetch(repoUrl, {
          headers: {
            'Accept': 'application/vnd.github.v3+json'
          }
        });

        if (!response.ok) {
          throw new Error(`HTTP ${response.status}: ${response.statusText}`);
        }

        const data = await response.json();
        const readmeContent = atob(data.content); // Decode base64 content

        // Parse the README.md content with more flexible regex
        const dateMatch = readmeContent.match(/## ðŸ“… Word of the Day - (\d{4}-\d{2}-\d{2})/) || readmeContent.match(/Word of the Day - (\d{4}-\d{2}-\d{2})/);
        const wordMatch = readmeContent.match(/### \*\*([^*]+)\*\*/);
        const meaningMatch = readmeContent.match(/- \*\*Meaning\*\*: (.+)/);

        if (!dateMatch || !wordMatch || !meaningMatch) {
          throw new Error('Could not parse README.md content. Check the format.');
        }

        const date = dateMatch[1];
        const word = wordMatch[1];
        const meaning = meaningMatch[1];

        // Display the content
        dateElement.textContent = `ðŸ“… ${date}`;
        wordElement.textContent = word;
        meaningElement.textContent = `Meaning: ${meaning}`;

        // Show the content and hide loading/error states
        loading.classList.add('hidden');
        wordContent.classList.remove('hidden');
        error.classList.add('hidden');
      } catch (err) {
        console.error('Error:', err.message);
        loading.classList.add('hidden');
        wordContent.classList.add('hidden');
        error.classList.remove('hidden');
        errorDetails.textContent = err.message;
      }
    }

    // Fetch the Word of the Day when the page loads
    document.addEventListener('DOMContentLoaded', fetchWordOfTheDay);
  </script>
</body>
</html>